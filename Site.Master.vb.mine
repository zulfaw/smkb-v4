Imports Microsoft.AspNet.Identity
Imports System.Globalization
Imports System.Threading
Imports System.Configuration
Imports System.Web.Configuration
Imports System.Collections.Specialized
Imports System.Reflection


Public Class SiteMaster
    Inherits MasterPage
    Private Const AntiXsrfTokenKey As String = "__AntiXsrfToken"
    Private Const AntiXsrfUserNameKey As String = "__AntiXsrfUserName"
    Private _antiXsrfTokenValue As String

    Dim Moduls As New DataTable()
    Dim SubModuls As New DataTable()
    Dim SubMenus As New DataTable()

    Protected Sub Page_Init(sender As Object, e As EventArgs)
        ' The code below helps to protect against XSRF attacks
        Dim requestCookie = Request.Cookies(AntiXsrfTokenKey)
        Dim requestCookieGuidValue As Guid
        If requestCookie IsNot Nothing AndAlso Guid.TryParse(requestCookie.Value, requestCookieGuidValue) Then
            ' Use the Anti-XSRF token from the cookie
            _antiXsrfTokenValue = requestCookie.Value
            Page.ViewStateUserKey = _antiXsrfTokenValue
        Else
            ' Generate a new Anti-XSRF token and save to the cookie
            _antiXsrfTokenValue = Guid.NewGuid().ToString("N")
            Page.ViewStateUserKey = _antiXsrfTokenValue

            Dim responseCookie = New HttpCookie(AntiXsrfTokenKey) With {
                 .HttpOnly = True,
                 .Value = _antiXsrfTokenValue
            }
            If FormsAuthentication.RequireSSL AndAlso Request.IsSecureConnection Then
                responseCookie.Secure = True
            End If
            Response.Cookies.[Set](responseCookie)
        End If

        AddHandler Page.PreLoad, AddressOf master_Page_PreLoad
    End Sub

    Protected Sub master_Page_PreLoad(sender As Object, e As EventArgs)
        If Not IsPostBack Then
            ' Set Anti-XSRF token
            ViewState(AntiXsrfTokenKey) = Page.ViewStateUserKey
            ViewState(AntiXsrfUserNameKey) = If(Context.User.Identity.Name, [String].Empty)
        Else
            ' Validate the Anti-XSRF token
            If DirectCast(ViewState(AntiXsrfTokenKey), String) <> _antiXsrfTokenValue OrElse DirectCast(ViewState(AntiXsrfUserNameKey), String) <> (If(Context.User.Identity.Name, [String].Empty)) Then
                Throw New InvalidOperationException("Validation of Anti-XSRF token failed.")
            End If
        End If
    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Session("TukarPTj") = 0
        Dim trackno As Integer = 0

        Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture("en-US")

        ' Stop Caching in IE
        Response.Cache.SetCacheability(System.Web.HttpCacheability.NoCache)
        ' Stop Caching in Firefox
        Response.Cache.SetNoStore()

        Try

            Dim config As Configuration = WebConfigurationManager.OpenWebConfiguration("~/Web.Config")
            Dim section As SessionStateSection = DirectCast(config.GetSection("system.web/sessionState"), SessionStateSection)
            Dim intTimeout As Integer = CInt(section.Timeout.TotalMinutes) * 60 * 1000

            hidTimeOut.Value = intTimeout
            hidWarn.Value = intTimeout + 10000

            trackno = 6
            If Not Page.IsPostBack Then

                Dim strPcName As String = My.Computer.Name
                Dim strPcIP As String = fGetUserIP()
                Dim SysVer As Version = Assembly.GetExecutingAssembly().GetName().Version
                Dim strErrSysVer As String = SysVer.ToString
                Session("PcIP") = strPcIP
                Session("PcName") = strPcName
                Session("SysVer") = strErrSysVer

                If Session("ssusrID") Is Nothing Then
                    Session("ssusrID") = Trim(Request.QueryString("usrLogin"))
                    Session("sessionID") = Trim(Request.QueryString("usession"))
                End If

                Session("ssusrID") = "02636"
                Session("sessionID") = "0705025542019"
                'If FCheckSession(Session("ssusrID"), Session("sessionID")) = False Then
                'Session("SmkbMessage") = "Sesi tamat! Sila login semula di i@UteM."
                'Response.Redirect("/SMKBNet/FORMS/Logout.aspx", False)
                'Exit Sub
                'Else
                Using dtUserInfo2 = fGetUserTahap(Session("ssusrID"))
                        If dtUserInfo2.Rows.Count > 0 Then
                            Session("ssUsrTahap") = dtUserInfo2.Rows.Item(0).Item("JenTahap")
                            Dim KodTahap = dtUserInfo2.Rows.Item(0).Item("KodTahap")
                            fGetMenu(KodTahap)
                        End If
                    End Using
                    Session("LoggedIn") = True
                'End If
            End If

        Catch ex As Exception
            fErrorLog(ex.ToString)
        End Try
    End Sub

    Protected Sub Unnamed_LoggingOut(sender As Object, e As LoginCancelEventArgs)
        Context.GetOwinContext().Authentication.SignOut(DefaultAuthenticationTypes.ApplicationCookie)
    End Sub


    'Private Sub fLoadMenu()
    '    If Session("Modul") IsNot Nothing Then
    '        Moduls = Session("Modul")
    '        SubModuls = Session("SubModul")
    '        SubMenus = Session("SubMenu")

    '        rptCategories.DataSource = Moduls
    '        rptCategories.DataBind()
    '    End If
    'End Sub

    ''' <summary>
    ''' get smkb menu list from db. Load once when opening new system, when session userid is nothing.
    ''' </summary>
    Private Sub fGetMenu(KodTahap As String)
        Dim strSqlModul = "select KodModul, NamaModul from MK_UModul Where KodModul IN ('01','02','03','04','05','07','10','12','95','97') AND Status = 1 Order By Urutan;" '"select KodModul, NamaModul from MK_UModul Where Status = 1 Order By Urutan;"
        Dim strSqlSubModul = "select KodSub, NamaSub, KodModul from MK_USubModul where KodModul IN ('01','02','03','04','05','07','10','12','95','97') AND status = 1 order by Urutan;"
        Dim strSqlSubMenu = "select KodSubMenu, DisSubMenu, KodSub from MK_USubMenu where KodSub IN (select KodSub from MK_USubModul where KodModul IN ('01','02','03','04','05','07','10','12','95','97') AND status = 1) AND status = 1 order by Urutan;"
        Dim strSqlProsesInd = $"SELECT KodSubMenu, NoStaf, TkhMula, TkhTamat, JenCapai FROM MK_UProsesInd WHERE (NoStaf = '{ Session("ssusrID") }') ORDER BY KodSubMenu;"
        Dim strSqlProsesKump = $"Select KodSubMenu, TkhMula, TkhTamat, KodTahap, JenCapai FROM MK_UProsesKump WHERE (KodTahap = '{ KodTahap }') ORDER BY KodSubMenu;"
        Dim strSqlKawalan = $"SELECT KodSubMenu, TrkMula, TrkHingga FROM MK_Kawalan ORDER BY KodSubMenu;"

        Dim dbconn As New DBKewConn
        Using ds = dbconn.fSelectCommand(strSqlModul + strSqlSubModul + strSqlSubMenu + strSqlProsesInd + strSqlProsesKump + strSqlKawalan)
            Moduls = ds.Tables(0)
            SubModuls = ds.Tables(1)
            SubMenus = ds.Tables(2) 'Allsubmenu

            'Check if not Pentadbir Sistem (A100)
            If Not KodTahap = "A100" Then
                'if not pentadbir sistem, check 
                '1.capaian individu 
                '2.capaian kelompok
                '3.kawalan capaian

                Dim dtCloneModul = Moduls.Clone
                Dim dtCloneSubModul = SubModuls.Clone
                Dim dtCloneSubmenu = SubMenus.Clone

                Dim kodSubmenu = "", DisSubMenu = "", KodSub = "", NamaSub = "", KodModul = "", NamaModul = ""

                'Load capaian Kumpulan
                Using dtProsesKump = ds.Tables(4)
                    If dtProsesKump.Rows.Count > 0 Then
                        For Each rowProsesKump As DataRow In dtProsesKump.Rows
                            kodSubmenu = rowProsesKump.Item("KodSubMenu")
                            KodSub = kodSubmenu.Substring(0, 4)
                            KodModul = kodSubmenu.Substring(0, 2)

                            Dim rowSelectedSubMenu = SubMenus.Select($"KodSubMenu = '{kodSubmenu}'").FirstOrDefault
                            If rowSelectedSubMenu IsNot Nothing Then
                                Dim rowSelectedModul = Moduls.Select($"KodModul = '{KodModul}'").FirstOrDefault
                                Dim rowSelectedSubModul = SubModuls.Select($"KodSub = '{KodSub}'").FirstOrDefault

                                NamaModul = rowSelectedModul.Item("NamaModul")
                                NamaSub = rowSelectedSubModul.Item("NamaSub")
                                DisSubMenu = rowSelectedSubMenu.Item("DisSubMenu")
                                KodSub = rowSelectedSubMenu.Item("KodSub")
                                If rowProsesKump.Item("JenCapai").Equals("U") Then

                                    dtCloneSubmenu.Rows.Add(kodSubmenu, DisSubMenu, KodSub)

                                    If Not dtCloneModul.Select($"KodModul = '{KodModul}'").Any Then
                                        dtCloneModul.Rows.Add(KodModul, NamaModul)
                                    End If

                                    If Not dtCloneSubModul.Select($"KodSub = '{KodSub}'").Any Then
                                        dtCloneSubModul.Rows.Add(KodSub, NamaSub, KodModul)
                                    End If
                                Else
                                    'If Jenis Capaian = 'L', check date interval
                                    If Date.Now >= rowProsesKump.Item("TkhMula") And Date.Now <= rowProsesKump.Item("TkhTamat") Then

                                        dtCloneSubmenu.Rows.Add(kodSubmenu, DisSubMenu, KodSub)

                                        If Not dtCloneModul.Select($"KodModul = '{KodModul}'").Any Then
                                            dtCloneModul.Rows.Add(KodModul, NamaModul)
                                        End If

                                        If Not dtCloneSubModul.Select($"KodSub = '{KodSub}'").Any Then
                                            dtCloneSubModul.Rows.Add(KodSub, NamaSub, KodModul)
                                        End If
                                    End If
                                End If
                            End If
                        Next
                    End If
                End Using

                'Load capaian individu - Open Submenu
                Using dtProsesInd = ds.Tables(3)
                    If dtProsesInd.Rows.Count > 0 Then
                        For Each rowProsesInd As DataRow In dtProsesInd.Rows
                            kodSubmenu = rowProsesInd.Item("KodSubMenu")
                            KodSub = kodSubmenu.Substring(0, 4)
                            KodModul = kodSubmenu.Substring(0, 2)

                            Dim rowSelectedSubMenu = SubMenus.Select($"KodSubMenu = '{kodSubmenu}'").FirstOrDefault
                            If rowSelectedSubMenu IsNot Nothing Then
                                Dim rowSelectedModul = Moduls.Select($"KodModul = '{KodModul}'").FirstOrDefault
                                Dim rowSelectedSubModul = SubModuls.Select($"KodSub = '{KodSub}'").FirstOrDefault

                                NamaModul = rowSelectedModul.Item("NamaModul")
                                NamaSub = rowSelectedSubModul.Item("NamaSub")
                                DisSubMenu = rowSelectedSubMenu.Item("DisSubMenu")
                                KodSub = rowSelectedSubMenu.Item("KodSub")

                                If rowProsesInd.Item("JenCapai").Equals("U") Then

                                    If Not dtCloneSubmenu.Select($"KodSubMenu = '{kodSubmenu}'").Any Then
                                        dtCloneSubmenu.Rows.Add(kodSubmenu, DisSubMenu, KodSub)
                                    End If

                                    If Not dtCloneModul.Select($"KodModul = '{KodModul}'").Any Then
                                        dtCloneModul.Rows.Add(KodModul, NamaModul)
                                    End If

                                    If Not dtCloneSubModul.Select($"KodSub = '{KodSub}'").Any Then
                                        dtCloneSubModul.Rows.Add(KodSub, NamaSub, KodModul)
                                    End If

                                Else
                                    'If Jenis Capaian = 'L', check date interval
                                    If Date.Now >= rowProsesInd.Item("TkhMula") And Date.Now <= rowProsesInd.Item("TkhTamat") Then
                                        If Not dtCloneSubmenu.Select($"KodSubMenu = '{kodSubmenu}'").Any Then
                                            dtCloneSubmenu.Rows.Add(kodSubmenu, DisSubMenu, KodSub)
                                        End If

                                        If Not dtCloneModul.Select($"KodModul = '{KodModul}'").Any Then
                                            dtCloneModul.Rows.Add(KodModul, NamaModul)
                                        End If

                                        If Not dtCloneSubModul.Select($"KodSub = '{KodSub}'").Any Then
                                            dtCloneSubModul.Rows.Add(KodSub, NamaSub, KodModul)
                                        End If
                                    End If
                                End If
                            End If
                        Next
                    End If
                End Using

                Dim p1date = Now.ToString("MM/dd/yyyy HH:mm:ss")
                Dim myfilter = "TrkHingga >= #" + p1date + "# AND TrkMula <=#" + p1date + "#"
                'Load kawalan capaian - disable submenu
                Dim drKawalan As DataRow() = ds.Tables(5).Select(myfilter)

                If drKawalan.Count > 0 Then
                    For Each rowKawalan As DataRow In drKawalan
                        kodSubmenu = rowKawalan.Item("KodSubMenu")

                        Dim rowSelectedSubMenu = dtCloneSubmenu.Select($"KodSubMenu = '{kodSubmenu}'").FirstOrDefault
                        If rowSelectedSubMenu IsNot Nothing Then
                            If kodSubmenu.Equals(rowSelectedSubMenu.Item("KodSubMenu")) Then
                                'Delete submenu
                                rowSelectedSubMenu.Delete()
                            End If
                        End If
                    Next
                    dtCloneSubmenu.AcceptChanges()
                End If

                dtCloneModul.DefaultView.Sort = "Urutan ASC"
                Moduls = dtCloneModul.DefaultView.ToTable

                dtCloneSubModul.DefaultView.Sort = "Urutan ASC"
                SubModuls = dtCloneSubModul.DefaultView.ToTable

                dtCloneSubmenu.DefaultView.Sort = "Urutan ASC"
                SubMenus = dtCloneSubmenu.DefaultView.ToTable
            End If
        End Using

        'Session("Modul") = Moduls
        'Session("SubModul") = SubModuls
        'Session("SubMenu") = SubMenus
        rptMenu.DataSource = Moduls
        rptMenu.DataBind()
    End Sub

    ''' <summary>
    ''' get smkb notification
    ''' </summary>
    Private Sub fGetNoti()
        Dim strSql As String = "select [CLM_NotifikasiID],[CLM_Perkara],[CLM_Url],[CLM_NamaSub],[CLM_Status],[CLM_Tarikh],[CLM_TkhTindakan],[CLM_NoRujukan] from [CLM_Notifikasi] where [CLM_Status] = 1 and [CLM_SisKod] = 'SMKB' and [CLM_NoStaf] = '" & Session("ssusrID") & "'"
        Dim dbconn As New DBClmConn
        Using ds = dbconn.fselectCommand(strSql)
            If ds.Tables(0).Rows.Count > 0 Then
                'Session("ssCntNoti") = cntNoti
                'Session("ssNoti") = cntNoti
            Else
                'Session("ssCntNoti") = ""
                'Session("ssNoti") = "TIADA"
            End If
        End Using
    End Sub

    ''' <summary>
    ''' rptMenu_OnItemBound event
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    Protected Sub rptMenu_OnItemBound(sender As Object, e As RepeaterItemEventArgs)
        Dim strMenuId As String
        Dim strSubMenuId As String

        Try
            If e.Item.ItemType = ListItemType.Item OrElse e.Item.ItemType = ListItemType.AlternatingItem Then
                If e.Item.ItemType = ListItemType.Item OrElse e.Item.ItemType = ListItemType.AlternatingItem Then
                    If Moduls IsNot Nothing Then
                        Dim drv As DataRowView = TryCast(e.Item.DataItem, DataRowView)
                        Dim ID As String = drv("KodModul").ToString()
                        Dim Title As String = drv("NamaModul").ToString()

                        Dim rows As DataRow() = SubModuls.[Select](Convert.ToString("KodModul=") & ID)

                        If rows.Length > 0 Then

                            Dim sb As New StringBuilder()

                            strSubMenuId = Request.QueryString("KodSub")

                            If strSubMenuId = Nothing Then
                                'strMenuId = "01"
                            Else
                                strMenuId = strSubMenuId.Substring(0, 2)
                            End If

                            If ID = strMenuId Then
                                sb.Append((Convert.ToString("<ul id='") & ID) + "' class='sub-menu active'>")
                            Else
                                sb.Append((Convert.ToString("<ul id='") & ID) + "' class='sub-menu collapse'>")

                            End If


                            'sb.Append((Convert.ToString("<ul id='") & ID) + "' class='sub-menu collapse'>")

                            For Each item In rows
                                Dim parentId As String = item("KodSub").ToString()
                                Dim parentTitle As String = item("NamaSub").ToString()
                                'parentTitle = parentTitle.Replace(" ", "_")
                                'parentTitle = System.Text.RegularExpressions.Regex.Replace(parentTitle, "[^a-zA-Z0-9]", "_")
                                Dim parentRow As DataRow() = SubMenus.[Select](Convert.ToString("KodSub=") & parentId)

                                If parentRow.Count() > 0 Then

                                    'sb.Append((Convert.ToString("<li data-toggle='collapse' data-target='#") & parentTitle) + "' class='collapsed'><a href='" + item("Url") + "'>" + item("NamaSub") + "<span class='arrow'></span></a>")
                                    sb.Append((Convert.ToString("<li data-toggle='collapse' data-target='#") & parentId) + "' class='collapsed''>&nbsp;&nbsp; " + parentTitle + "</a>")
                                    sb.Append("</li>")
                                Else
                                    sb.Append("<li> &nbsp;&nbsp;" + item("NamaSub") + "</a>")
                                    sb.Append("</li>")
                                End If
                                sb = fCreateChild(sb, Title, parentId, parentTitle, parentRow)
                            Next
                            sb.Append("</ul>")
                            TryCast(e.Item.FindControl("ltrlSubMenu"), Literal).Text = sb.ToString()
                        End If
                    End If
                End If
            End If
        Catch ex As Exception

        End Try

    End Sub

    ''' <summary>
    ''' create sub modul menu
    ''' </summary>
    ''' <param name="sb"></param>
    ''' <param name="Title"></param>
    ''' <param name="parentId"></param>
    ''' <param name="parentTitle"></param>
    ''' <param name="parentRows"></param>
    ''' <returns></returns>
    Private Function fCreateChild(sb As StringBuilder, Title As String, parentId As String, parentTitle As String, parentRows As DataRow()) As StringBuilder

        Try

            parentTitle = parentTitle.Replace("/", "")
            parentTitle = parentTitle.Replace("  ", " ")

            If parentRows.Length > 0 Then

                Dim strSubMenuId As String = Request.QueryString("KodSub")

                If strSubMenuId = Nothing Then
                    strSubMenuId = ""
                End If

                If parentId = strSubMenuId Then
                    sb.Append((Convert.ToString("<ul id='") & parentId) + "' class='sub-menu collapse in'>")
                Else
                    sb.Append((Convert.ToString("<ul id='") & parentId) + "' class='sub-menu collapse'>")
                End If

                'sb.Append((Convert.ToString("<ul id='") & parentId) + "' class='sub-menu collapse'>")
                For Each item In parentRows
                    Dim strKodSub As String = item("KodSub").ToString()
                    Dim strKodSubMenu As String = item("KodSubMenu").ToString()
                    Dim strNamaSubMenu As String = item("DisSubMenu").ToString()

                    Dim url As String
                    Dim strPage As String
                    'Dim url As String = Title & "/" & parentTitle & "/" & strNamaSubMenu.Replace(" ", "_") & ".aspx?Title=" & strNamaSubMenu & "&KodSub=" & strKodSub

                    strPage = strNamaSubMenu.Replace(" ", "_")
                    strPage = strPage.Replace("/", "")
                    strPage = strPage.Replace("__", "_")
                    strPage = strPage.Replace("&&", "")
                    strPage = strPage.Replace("(", "(")
                    strPage = strPage.Replace(")", ")")
                    strPage = strPage.Replace(".", "")
                    strPage = strPage.Replace("R&D", "RD")


                    url = "/SMKBNet/FORMS/" & Trim(Title.TrimEnd) & "/" & Trim(parentTitle.TrimEnd) & "/" & Trim(strPage.TrimEnd) & ".aspx?Title=" & strNamaSubMenu.ToUpper & "&KodSub=" & strKodSub & "&KodSubMenu=" & strKodSubMenu
                    strNamaSubMenu = ConvertString(strNamaSubMenu)

                    strNamaSubMenu = strNamaSubMenu.Replace("Kw", "KW")
                    strNamaSubMenu = strNamaSubMenu.Replace("Ptj", "PTj")
                    strNamaSubMenu = strNamaSubMenu.Replace("Grn", "GRN")
                    strNamaSubMenu = strNamaSubMenu.Replace("Srn", "SRN")
                    strNamaSubMenu = strNamaSubMenu.Replace("Wpn", "WPN")


                    Dim childRow As DataRow() = SubMenus.[Select](Convert.ToString("KodSub=") & strKodSub)
                    If childRow.Count() > 0 Then
                        sb.Append((Convert.ToString("<li data-toggle='collapse'  data-target='#") & strKodSub) + "' class='collapsed' style='background-color : #FFFFFF;'><a id='tab2' href='" + url + "'> &nbsp;&nbsp; <i class='fa fa-chevron-right' aria-hidden='True'></i>" + strNamaSubMenu + "</a>")
                        sb.Append("</li>")
                    Else
                        sb.Append("<li><a href='" + item("Url") + "'>" + item("NamaSubMenu") + "</a>")
                        sb.Append("</li>")
                    End If
                    'CreateChild(sb, childId, childTitle, childRow)
                Next
                sb.Append("</ul>")
            End If
            Return sb
        Catch ex As Exception

        End Try
        Return sb
    End Function

    ''' <summary>
    ''' Check Session ID
    ''' </summary>
    ''' <param name="strSesStaffID"></param>
    ''' <param name="strUsession"></param>
    ''' <returns></returns>
    Private Function FCheckSession(ByVal strSesStaffID As String, ByVal strUsession As String) As Boolean
        Try

            Dim strSql As String = "SELECT CLM_USESSIONID AS SESSIONID FROM CLM_PENGGUNA WHERE CLM_LOGINID = '" & strSesStaffID & "' AND (CLM_USessionID = '" & strUsession & "')"
            Dim dbconn As New DBClmConn
            Using ds = dbconn.fselectCommand(strSql)
                If ds.Tables(0).Rows.Count > 0 Then
                    Return True
                Else
                    Return False
                End If
            End Using


        Catch ex As Exception
            Return False
        End Try
    End Function

    Private Sub lbtnTukarPTj_Click(sender As Object, e As EventArgs) Handles lbtnTukarPTj.Click
        fBindDdlPTj()
        mpeTukarPTj.Show()
    End Sub

    Private Sub fBindDdlPTj()
        Try

            Dim strSql As String = "select PTJ, (Select B.KodPTJ + ' - ' + B.Butiran  from MK_PTJ B where B.KodPTJ = PTJ ) as Butiran from MK_PowerPTJ where NoStaf = '" & Session("ssusrID") & "' and ptj <> '" & Session("ssusrKodPTj") & "'"
            Dim ds As New DataSet
            Dim dbconn As New DBKewConn
            Dim dt As New DataTable
            ds = dbconn.fSelectCommand(strSql)

            ddlPTj.DataSource = ds
            ddlPTj.DataTextField = "Butiran"
            ddlPTj.DataValueField = "PTJ"
            ddlPTj.DataBind()

        Catch ex As Exception

        End Try
    End Sub

    Private Sub lbtnOKTukarpTj_Click(sender As Object, e As EventArgs) Handles lbtnOKTukarpTj.Click
        Try
            Dim strKodPTj As String = ddlPTj.SelectedValue
            Dim strPTj As String = ddlPTj.SelectedItem.Text.Substring(9)

            Session("ssusrKodPTj") = strKodPTj
            Session("ssusrPTj") = strPTj

            strSesUserKodPtj = strKodPTj
            struserPtj = strPTj

            Response.Redirect("/SMKBNet/FORMS/Main.aspx", False)
            Session("TukarPTj") = 1

        Catch ex As Exception

        End Try

    End Sub

    Private Sub ddlPTj_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlPTj.SelectedIndexChanged
        mpeTukarPTj.Show()
    End Sub
End Class